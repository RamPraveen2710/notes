import xgboost as xgb
import onnxmltools
from skl2onnx.common.data_types import FloatTensorType

# Assuming 'data' is your DataFrame
X = data[[...]]  # Replace with your feature columns
y = data["target"]  # Replace with your target column

# Step 1: Map feature names to the required format
feature_map = {col: f"f{i}" for i, col in enumerate(X.columns)}
X_mapped = X.rename(columns=feature_map)

# Step 2: Train the XGBoost model
model = xgb.XGBRegressor()
model.fit(X_mapped, y)

# Step 3: Convert the model to ONNX using onnxmltools
initial_type = [("float_input", FloatTensorType([None, X_mapped.shape[1]]))]
onnx_model = onnxmltools.convert_xgboost(model, initial_types=initial_type)

# Step 4: Save the ONNX model
with open("xgb_model.onnx", "wb") as f:
    f.write(onnx_model.SerializeToString())

print("Model saved as xgb_model.onnx")

# (Optional) Save the feature mapping for later use
import json
with open("feature_mapping.json", "w") as f:
    json.dump(feature_map, f)
print("Feature mapping saved.")
